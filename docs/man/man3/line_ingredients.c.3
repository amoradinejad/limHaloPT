.TH "line_ingredients.c" 3 "Tue Jul 12 2022" "Version 1.0.0" "limHaloPT" \" -*- nroff -*-
.ad l
.nh
.SH NAME
line_ingredients.c \- Documented line_ingredients module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'header\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fBLine\fP * \fBLine_alloc_init\fP (struct \fBCosmology\fP *Cx, long line_type, size_t npoints_interp, double M_min, long mode_mf)"
.br
.RI "Allocate the memory and initialize the the line structure\&. "
.ti -1c
.RI "int \fBLine_free\fP (struct \fBLine\fP *Lx)"
.br
.RI "Free the line structure\&. "
.ti -1c
.RI "int \fBLine_evaluate\fP (struct \fBLine\fP *Lx, double *zz, double *res)"
.br
.RI "Allocate the memory and initialize the the line structure\&. "
.ti -1c
.RI "double \fBmult_func\fP (double sigma, long mode_mf)"
.br
.RI "Compute the multiplicity function needed to compute the halo mass function Three models are implemented: Press-Schechter, Sheth-Tormen and Tinker see Pillepich et al arxiv: 0811\&.4176 for the expressions\&. "
.ti -1c
.RI "double \fBmass_func\fP (struct \fBCosmology\fP *Cx, double M, double z, long mode_mf)"
.br
.RI "Compute the halo mass function for Press-Schechter, Sheth-Tormen and Tinker models see Pillepich et al arxiv: 0811\&.4176 for the expressions\&. "
.ti -1c
.RI "double \fBmass_func_sims\fP (struct \fBCosmology\fP *Cx, double M, double z, long mode_mf)"
.br
.RI "Read in the measured mass function of Hidden-valey sims and build an interpolator for HMF(M) for a fixed redshift\&. "
.ti -1c
.RI "void \fBhalo_bias\fP (struct \fBCosmology\fP *Cx, double M, double z, long mode_mf, double *bias_arr)"
.br
.RI "computes the halo biases for three mass functions, press-schecter, Sheth-Tormen, and Tinker mass functions "
.ti -1c
.RI "void \fBlogSFR_Behroozi_read\fP (double *z_arr, double *logM_arr, double *log10SFR)"
.br
.RI "Read in the file for the star formation rate byy Behroozi et al 2013\&. "
.ti -1c
.RI "int \fBlogSFR_alloc_init\fP ()"
.br
.RI "Allocate memory and initialize the 2d interpolator for the star formation rate of Behroozi et al 2013 as a function of halo mass and redshift\&. "
.ti -1c
.RI "int \fBSFR_Behroozi_free\fP ()"
.br
.RI "Free the memory allocated to the interpolators of star formation rate by Behroozi et al 2013\&. "
.ti -1c
.RI "double \fBlogSFR_Behroozi\fP (double logM, double z)"
.br
.RI "Evaluate the SFR interpolator object for a given value of mass and redshift\&. "
.ti -1c
.RI "double \fBluminosity\fP (double M, double z, long mode_lum)"
.br
.RI "Compute the line specific luminosity in unit of solar luminosity For CO ladder, I am using the fits in Table 4 of Kamenetzky et al\&. "
.ti -1c
.RI "int \fBmass_moment1_integ\fP (unsigned nd, const double *x, void *p, unsigned fdim, double *fvalue)"
.br
.RI "The integrand function passed to hcubature integrator to compute the first moment of line luminosity\&. "
.ti -1c
.RI "double \fBmass_moment1\fP (struct \fBCosmology\fP *Cx, double z, double M_min, long mode_mf, long mode_lum)"
.br
.RI "Compute the first luminosity moment\&. "
.ti -1c
.RI "int \fBmass_moment2_integ\fP (unsigned nd, const double *x, void *p, unsigned fdim, double *fvalue)"
.br
.RI "The integrand function passed to hcubature integrator to compute the second moment of line luminosity\&. "
.ti -1c
.RI "double \fBmass_moment2\fP (struct \fBCosmology\fP *Cx, double z, double M_min, long mode_mf, long mode_lum)"
.br
.RI "Compute the second luminosity moment\&. "
.ti -1c
.RI "int \fBbias_lum_weighted_integ\fP (unsigned nd, const double *x, void *p, unsigned fdim, double *fvalue)"
.br
.RI "The integrand function passed to hcubature integrator to compute the un-normalized luminosity-weighted line bias\&. "
.ti -1c
.RI "void \fBbias_lum_weighted\fP (struct \fBCosmology\fP *Cx, double z, double M_min, long mode_mf, long mode_lum, double *result)"
.br
.RI "Compute the luminosity-weighted linear and quadratic line biases\&. "
.ti -1c
.RI "double \fBp_sig_shot_integrand\fP (double x, void *par)"
.br
.RI "The integrand function passed to qags integrator to compute the scatter in shot ala Keating 2016\&. "
.ti -1c
.RI "double \fBp_sig_shot\fP (double scatter)"
.br
.RI "Compute the scatter in shot noise due to scatter in luminosity-halo mass relation, assume log-normal scatter ala Keating Note that we set f_duty =1 unlike other LIM paper (ex\&. "
.ti -1c
.RI "double \fBp_sig_Tbar_integrand\fP (double x, void *par)"
.br
.RI "The integrand function passed to qags integrator to compute the scatter in Tbar ala Keating 2016\&. "
.ti -1c
.RI "double \fBp_sig_Tbar\fP (double scatter)"
.br
.RI "Compute the scatter in Tbar due to scatter in luminosity-halo mass relation, assume log-normal scatter ala Keating Note that we set f_duty =1 unlike other LIM paper (ex\&. "
.ti -1c
.RI "void \fBline_bias\fP (struct \fBLine\fP *Lx, double z, double *result)"
.br
.RI "Compute the linear and quadratic line biases, accounting ffor the normalization w\&.r\&.t\&. "
.ti -1c
.RI "double \fBmean_intens\fP (struct \fBCosmology\fP *Cx, size_t line_id, double z)"
.br
.RI "Compute the line mean intensity in unit of erg Mpc^-2 Sr^-1\&. "
.ti -1c
.RI "double \fBTbar_line\fP (struct \fBCosmology\fP *Cx, size_t line_id, double z)"
.br
.RI "Compute the mean brightness temprature of CO in unit of microK, compared with Pullen et al and Lidz et al 2011\&. "
.in -1c
.SH "Detailed Description"
.PP 
Documented line_ingredients module\&. 

This module includes functions that are needed for computing the line clustering and shot contributions\&.
.PP
Azadeh Moradinezhad Dizgah, November 4th 2021
.PP
In summary, the following functions can be called from other modules:
.IP "1." 4
\fBLine_alloc_init()\fP allocate memory and initizlized the line structure which contains 4 interpolators for first and second mass moments and linear and quadratic line biases\&.
.IP "2." 4
\fBLine_free()\fP frees the memory allocated to line structure
.IP "3." 4
\fBLine_evaluate()\fP evaluates the interpolators initialized in \fBLine_alloc_init()\fP
.IP "4." 4
\fBmult_func()\fP computes the multiplicity function needed for computing the halo mass function
.IP "5." 4
\fBmass_func()\fP computes the halo mass finction\&. Three options are available, Press-Schecter, Sheth-Tormen, Tinker
.IP "6." 4
\fBmass_func_sims()\fP reads in the measured mass function on Hidden-Valley simulations by Farnik, and convert it to compare with the theoretical predictions
.IP "7." 4
\fBhalo_bias()\fP computes the halo biases assuming the above theoretical predictions of the halo mass function
.IP "8." 4
\fBlogSFR_Behroozi_read()\fP reeds in the data file of Behroozi 2013 for SFR(M,z)
.IP "9." 4
\fBlogSFR_alloc_init()\fP allocates memory for 2d interpolator of logSFR(M,z)
.IP "10." 4
SFR_behroozi_free() frees the memory allocated to logSFR interpolator
.IP "11." 4
\fBlogSFR_Behroozi()\fP evaluates the logSFR_Behroozi interpolator
.IP "12." 4
\fBluminosity()\fP computes the line luminosity
.IP "13." 4
\fBmass_moment1()\fP computes the first mass moment
.IP "14." 4
\fBmass_moment2()\fP computes the first mass moment
.IP "15." 4
\fBbias_lum_weighted()\fP computes the luminosity-weighetd line bias
.IP "16." 4
\fBp_sig_shot()\fP computes the coefficient accounting for the scatter in L(M) in shot noise
.IP "17." 4
\fBp_sig_Tbar()\fP computes the coefficient accounting for the scatter in L(M) in mean brightness temprature
.IP "18." 4
\fBmean_intens()\fP compues the mean intensity of the line
.IP "19." 4
\fBTbar_line()\fP compues the mean brightness temprature of the line 
.PP

.SH "Function Documentation"
.PP 
.SS "void bias_lum_weighted (struct \fBCosmology\fP * Cx, double z, double M_min, long mode_mf, long mode_lum, double * result)"

.PP
Compute the luminosity-weighted linear and quadratic line biases\&. The normalization of first mass moment is not included yet\&. The function \fBbias_lum_weighted_integ()\fP is the integrand and \fBbias_lum_weighted()\fP computes the bias
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIz\fP Input: redshift 
.br
\fIM_min\fP Input: minimum halo mass 
.br
\fImode_mf\fP Input: model of halo mass function to consider, PSC, ST, TR 
.br
\fImode_lum\fP Inpute: which luminosity model, basically which line considered 
.br
\fIresult\fP Input: an output array of linear and quadratic line biases 
.RE
.PP
\fBReturns\fP
.RS 4
un-normalized line bias 
.br
 
.RE
.PP
In units of solar mass;
.PP
In units of solar mass
.SS "int bias_lum_weighted_integ (unsigned nd, const double * x, void * p, unsigned fdim, double * fvalue)"

.PP
The integrand function passed to hcubature integrator to compute the un-normalized luminosity-weighted line bias\&. 
.PP
\fBParameters\fP
.RS 4
\fInd\fP Input: Dimensionality of the domain of integration 
.br
\fIx\fP Input: integration variable 
.br
\fIp\fP Input: integration parmaeters 
.br
\fIfdim\fP Input: Dimensionality of the integrand function 
.br
\fIfvalue\fP Input: Array of values of the integrand of dimension fdim return the error status 
.RE
.PP

.SS "void halo_bias (struct \fBCosmology\fP * Cx, double M, double z, long mode_mf, double * bias_arr)"

.PP
computes the halo biases for three mass functions, press-schecter, Sheth-Tormen, and Tinker mass functions 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: \fBCosmology\fP structure 
.br
\fIM\fP Input: halo mass 
.br
\fIz\fP Input: redshift 
.br
\fImode_mf\fP Input: switch for setting the model of mass function, can be set to PSC, ST, TR 
.br
\fIbias_arr\fP Output: the output array containning linear and quadratic local-in-matter halo biases, and quadratic and cubic tidal biases 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.br
 
.RE
.PP
Note that for PSC and ST mass functions, same form of the biases can be assumed, with different coefficents\&. See astro-ph/0006319
.PP
Assuming spherical collapse
.SS "struct \fBLine\fP * Line_alloc_init (struct \fBCosmology\fP * Cx, long line_type, size_t npoints_interp, double M_min, long mode_mf)"

.PP
Allocate the memory and initialize the the line structure\&. This structure contains interpolators for computing the luminosity-weighted mass moments and line biases For a given line defined with 'line_type' variable, this function first computes the above four quantities for a wide range of redshifts\&. Next it iniialized 4 interpolators for these quantities, and store them in line structure\&.
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: \fBCosmology\fP structure 
.br
\fIline_type\fP Inpute: name of the line to compute\&. It can be set to CII, CO10, CO21, CO32, CO43, CO54, CO65 
.br
\fInpoints_interp\fP Input: number of interpolation points 
.br
\fIM_min\fP Input: minimum halo mass for mass integrals 
.br
\fImode_mf\fP Inpute: theoretical model of halo mass function to use\&. It can be set to sheth-Tormen (ST), Tinker (TR) or Press-Schecter (PSC) 
.RE
.PP
\fBReturns\fP
.RS 4
the total clustering line power spectrum, including the 1- and 2-halo term 
.br
 
.RE
.PP
CII
.SS "void line_bias (struct \fBLine\fP * Lx, double z, double * result)"

.PP
Compute the linear and quadratic line biases, accounting ffor the normalization w\&.r\&.t\&. the first mass moment
.PP
\fBParameters\fP
.RS 4
\fILx\fP Input: Pointer to line structure 
.br
\fIz\fP Input: Redshift 
.br
\fIresult\fP Input: a pointer to an array containing the results of b1_line and b2_line 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "int Line_evaluate (struct \fBLine\fP * Lx, double * zz, double * res)"

.PP
Allocate the memory and initialize the the line structure\&. This structure contains interpolators for computing the luminosity-weighted mass moments and line biases For a given line defined with 'line_type' variable, this function first computes the above four quantities for a wide range of redshifts\&. Next it iniialized 4 interpolators for these quantities, and store them in line structure\&.
.PP
\fBParameters\fP
.RS 4
\fILx\fP Input: Pointer to the line structure 
.br
\fIzz\fP Input: this is an array with 4 elements to determine which of the 4 interpolators should be evaluated\&.
.IP "\(bu" 2
If any of the elements are set to DO_NOT_EVALUATE, the quantitiy corresponding to that index is not computed\&. O
.IP "\(bu" 2
If any of the elements is set to z, the corresponding quantity would be evaluated at that redshift 
.PP
.br
\fIres\fP Output: an array containing the results\&. The number of elements of this array depends on how the zz array is set\&. 
.RE
.PP
\fBReturns\fP
.RS 4
the error status 
.RE
.PP

.SS "int Line_free (struct \fBLine\fP * Lx)"

.PP
Free the line structure\&. 
.PP
\fBParameters\fP
.RS 4
\fILx\fP Input: Pointer to line structure 
.RE
.PP
\fBReturns\fP
.RS 4
the error status 
.RE
.PP

.SS "int logSFR_alloc_init ()"

.PP
Allocate memory and initialize the 2d interpolator for the star formation rate of Behroozi et al 2013 as a function of halo mass and redshift\&. 
.PP
\fBReturns\fP
.RS 4
the error status 
.RE
.PP

.SS "double logSFR_Behroozi (double logM, double z)"

.PP
Evaluate the SFR interpolator object for a given value of mass and redshift\&. 
.PP
\fBParameters\fP
.RS 4
\fIlogM\fP Input: log10 of halo mass 
.br
\fIz\fP Input: redshift 
.RE
.PP
\fBReturns\fP
.RS 4
log10SFR 
.br
 
.RE
.PP

.SS "void logSFR_Behroozi_read (double * z_arr, double * logM_arr, double * log10SFR)"

.PP
Read in the file for the star formation rate byy Behroozi et al 2013\&. 
.PP
\fBParameters\fP
.RS 4
\fIz_arr\fP Output: pointer to an array of redshifts read from the file 
.br
\fIlogM_arr\fP Output: pointer to an array of halo masses read from the file 
.br
\fIlog10SFR\fP Output: pointer to an array of SFR read from the file 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.br
 
.RE
.PP

.SS "double luminosity (double M, double z, long mode_lum)"

.PP
Compute the line specific luminosity in unit of solar luminosity For CO ladder, I am using the fits in Table 4 of Kamenetzky et al\&. arXiv:1508\&.05102, while for CII we use Silva et al arXiv:1410\&.4808
.PP
\fBParameters\fP
.RS 4
\fIM\fP Input: halo mass 
.br
\fIz\fP Input: redshift 
.br
\fImode_lum\fP Inpute: which luminosity model, basically which line considered 
.RE
.PP
\fBReturns\fP
.RS 4
line luminosity 
.br
 
.RE
.PP
a = 1\&.37 Charilli
.PP
b = -1\&.74
.PP
in unit of K km/s pc^2
.PP
in unit of L_sun
.SS "double mass_func (struct \fBCosmology\fP * Cx, double M, double z, long mode_mf)"

.PP
Compute the halo mass function for Press-Schechter, Sheth-Tormen and Tinker models see Pillepich et al arxiv: 0811\&.4176 for the expressions\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: \fBCosmology\fP structure 
.br
\fIM\fP Input: Halo mass function 
.br
\fIz\fP Input: redshift 
.br
\fImode_mf\fP Input: switch for setting the model of mass function, can be set to PSC, ST, TR 
.RE
.PP
\fBReturns\fP
.RS 4
the halo mass function in unit of halos per Mpc^3 per solar mass, compared at z=0 with Murray etal https://arxiv.org/abs/1306.5140 
.RE
.PP

.SS "double mass_func_sims (struct \fBCosmology\fP * Cx, double M, double z, long mode_mf)"

.PP
Read in the measured mass function of Hidden-valey sims and build an interpolator for HMF(M) for a fixed redshift\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: \fBCosmology\fP structure 
.br
\fIM\fP Input: halo mass 
.br
\fIz\fP Input: redshift 
.br
\fImode_mf\fP Input: switch for setting the model of mass function, can be set to PSC, ST, TR 
.RE
.PP
\fBReturns\fP
.RS 4
the interpolated measured halo mass function 
.br
 M in unit of M_sun and HMF in unit of #-of-halos/Mpc^3/M_sun 
.RE
.PP
not to be used at z other than 2\&. This function is for testing purposes only\&. We test the theoretical predictions at z=2 if ST MF or measured MF are used\&.
.SS "double mass_moment1 (struct \fBCosmology\fP * Cx, double z, double M_min, long mode_mf, long mode_lum)"

.PP
Compute the first luminosity moment\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIz\fP Input: redshift 
.br
\fIM_min\fP Input: minimum halo mass 
.br
\fImode_mf\fP Input: model of halo mass function to consider, PSC, ST, TR 
.br
\fImode_lum\fP Inpute: which luminosity model, basically which line considered 
.RE
.PP
\fBReturns\fP
.RS 4
the first mass moment 
.br
 in unit of M_sun/Mpc^3 
.RE
.PP
In units of solar mass;
.PP
In units of solar mass
.SS "int mass_moment1_integ (unsigned nd, const double * x, void * p, unsigned fdim, double * fvalue)"

.PP
The integrand function passed to hcubature integrator to compute the first moment of line luminosity\&. 
.PP
\fBParameters\fP
.RS 4
\fInd\fP Input: Dimensionality of the domain of integration 
.br
\fIx\fP Input: integration variable 
.br
\fIp\fP Input: integration parmaeters 
.br
\fIfdim\fP Input: Dimensionality of the integrand function 
.br
\fIfvalue\fP Input: Array of values of the integrand of dimension fdim return the error status 
.RE
.PP

.SS "double mass_moment2 (struct \fBCosmology\fP * Cx, double z, double M_min, long mode_mf, long mode_lum)"

.PP
Compute the second luminosity moment\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIz\fP Input: redshift 
.br
\fIM_min\fP Input: minimum halo mass 
.br
\fImode_mf\fP Input: model of halo mass function to consider, PSC, ST, TR 
.br
\fImode_lum\fP Inpute: which luminosity model, basically which line considered 
.RE
.PP
\fBReturns\fP
.RS 4
the second lum moment 
.br
 in unit of M_sun/Mpc^3 
.RE
.PP
In units of solar mass;
.PP
In units of solar mass
.SS "int mass_moment2_integ (unsigned nd, const double * x, void * p, unsigned fdim, double * fvalue)"

.PP
The integrand function passed to hcubature integrator to compute the second moment of line luminosity\&. 
.PP
\fBParameters\fP
.RS 4
\fInd\fP Input: Dimensionality of the domain of integration 
.br
\fIx\fP Input: integration variable 
.br
\fIp\fP Input: integration parmaeters 
.br
\fIfdim\fP Input: Dimensionality of the integrand function 
.br
\fIfvalue\fP Input: Array of values of the integrand of dimension fdim return the error status 
.RE
.PP

.SS "double mean_intens (struct \fBCosmology\fP * Cx, size_t line_id, double z)"

.PP
Compute the line mean intensity in unit of erg Mpc^-2 Sr^-1\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: Pointer to cosmology structure 
.br
\fIline_id\fP Inpute: id of line of interest, an integer value 
.br
\fIz\fP Input: Redshift 
.RE
.PP
\fBReturns\fP
.RS 4
the line mean intensity 
.RE
.PP
Note: nu_J is the rest-frame emission frequency related to the observed frequency as nu_obs = nu_J/(1+z_J) For a CO transition from J-> J-1, the rest-frame frequency is nu_J = J nu_CO where nu_Co = 115 GHz\&. 
.br
.PP
in unit of erg/s
.SS "double mult_func (double sigma, long mode_mf)"

.PP
Compute the multiplicity function needed to compute the halo mass function Three models are implemented: Press-Schechter, Sheth-Tormen and Tinker see Pillepich et al arxiv: 0811\&.4176 for the expressions\&. 
.PP
\fBParameters\fP
.RS 4
\fIsigma\fP Input: variance of matter fluctuations 
.br
\fImode_mf\fP Input: switch for setting the model of mass function, can be set to PSC, ST, TR 
.RE
.PP
\fBReturns\fP
.RS 4
the multiplicity function 
.br
 
.RE
.PP
In Barkana & Loeb Rev a = 0\&.75
.SS "double p_sig_shot (double scatter)"

.PP
Compute the scatter in shot noise due to scatter in luminosity-halo mass relation, assume log-normal scatter ala Keating Note that we set f_duty =1 unlike other LIM paper (ex\&. Lidz et al 2011)\&.
.PP
\fBParameters\fP
.RS 4
\fIscatter\fP Input: variance of the log-scatter 
.RE
.PP
\fBReturns\fP
.RS 4
the scatter coeff of shot 
.RE
.PP

.SS "double p_sig_shot_integrand (double x, void * par)"

.PP
The integrand function passed to qags integrator to compute the scatter in shot ala Keating 2016\&. 
.PP
\fBParameters\fP
.RS 4
\fIx\fP Input: integration variable 
.br
\fIpar\fP Input: integration parmaeters 
.RE
.PP
\fBReturns\fP
.RS 4
value of the integrand 
.RE
.PP

.SS "double p_sig_Tbar (double scatter)"

.PP
Compute the scatter in Tbar due to scatter in luminosity-halo mass relation, assume log-normal scatter ala Keating Note that we set f_duty =1 unlike other LIM paper (ex\&. Lidz et al 2011)\&.
.PP
\fBParameters\fP
.RS 4
\fIscatter\fP Input: variance of the log-scatter 
.RE
.PP
\fBReturns\fP
.RS 4
the scatter coeff of Tbar 
.br
 
.RE
.PP

.SS "double p_sig_Tbar_integrand (double x, void * par)"

.PP
The integrand function passed to qags integrator to compute the scatter in Tbar ala Keating 2016\&. 
.PP
\fBParameters\fP
.RS 4
\fIx\fP Input: integration variable 
.br
\fIpar\fP Input: integration parmaeters 
.RE
.PP
\fBReturns\fP
.RS 4
value of the integrand 
.RE
.PP

.SS "int SFR_Behroozi_free ()"

.PP
Free the memory allocated to the interpolators of star formation rate by Behroozi et al 2013\&. 
.PP
\fBReturns\fP
.RS 4
the error status 
.RE
.PP

.SS "double Tbar_line (struct \fBCosmology\fP * Cx, size_t line_id, double z)"

.PP
Compute the mean brightness temprature of CO in unit of microK, compared with Pullen et al and Lidz et al 2011\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: Pointer to cosmology structure 
.br
\fIline_id\fP Inpute: id of line of interest, an integer value 
.br
\fIz\fP Input: Redshift 
.RE
.PP
\fBReturns\fP
.RS 4
the line mean temprature assuming Rayleigh-Jeans limit 
.RE
.PP
Boltzmann constant in unit of erg K^-1
.PP
factor of 10^6 is the conversion factor from K to microK
.SH "Author"
.PP 
Generated automatically by Doxygen for limHaloPT from the source code\&.
