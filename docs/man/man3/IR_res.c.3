.TH "IR_res.c" 3 "Mon Nov 8 2021" "Version 1.0.0" "limHaloPT" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IR_res.c \- Documented IR_res module\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'header\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "double \fBpm_IR_LO\fP (struct \fBCosmology\fP *Cx, double k, double z, long SPLIT)"
.br
.RI "Compute the leading-order IR-resummed matter power spectrum, ala Ivanovic et al\&. "
.ti -1c
.RI "double \fBpm_IR_NLO\fP (struct \fBCosmology\fP *Cx, double k, double z, long SPLIT)"
.br
.RI "Compute the next-to-leading-order IR-resummed matter power spectrum, ala Ivanovic et al\&. "
.ti -1c
.RI "double \fBIR_Sigma2_integrand\fP (double x, void *par)"
.br
.RI "Integrand to compute the suppression factor IR_sigma2\&. "
.ti -1c
.RI "double \fBIR_Sigma2\fP (struct \fBCosmology\fP *Cx, double z, double kf0, long SPLIT)"
.br
.RI "Compute the suppression factor IR_sigma2\&. "
.ti -1c
.RI "double \fBpm_nowiggle\fP (struct \fBCosmology\fP *Cx, double k, double z, double kf0, int \fBcleanup\fP, long SPLIT)"
.br
.RI "Compute the no-wiggle componenet of the matter power spectrum\&. "
.ti -1c
.RI "double \fBpm_nowiggle_bspline\fP (struct \fBCosmology\fP *Cx, double k, double z, int \fBcleanup\fP)"
.br
.RI "Compute the no-wiggle componenet of the matter power spectrum, reading in and interpolating the output of apython code which computed the broadband by fitting families of Bsplines (see Vlah et al 2015) "
.ti -1c
.RI "double \fBpm_nowiggle_gfilter\fP (struct \fBCosmology\fP *Cx, double k, double z, int \fBcleanup\fP)"
.br
.RI "Compute the no-wiggle componenet of the matter power spectrum, using Gaussian filter (see Vlah et al 2015) "
.ti -1c
.RI "double \fBpm_nowiggle_dst\fP (struct \fBCosmology\fP *Cx, double k, double z, int \fBcleanup\fP)"
.br
.RI "Compute the no-wiggle componenet of the matter power spectrum, reading in and interpolating the output of apython code which computed the broadband by discrete sin-transform, See Hamann et al 2010\&. "
.in -1c
.SH "Detailed Description"
.PP 
Documented IR_res module\&. 

Azadeh Moradinezhad Dizgah, November 4th 2021
.PP
This module is computes the leading and next-to-leading IR-resummed matter power spectrum The wiggle-nowiggle seperation is performed in \fBwnw_split\&.c\fP module\&.
.PP
In summary, the following functions can be called from other modules:
.IP "1." 4
\fBpm_IR_LO()\fP
.IP "2." 4
\fBpm_IR_NLO()\fP
.IP "3." 4
\fBIR_Sigma2()\fP
.IP "4." 4
\fBpm_nowiggle()\fP
.IP "5." 4
\fBpm_nowiggle_gfilter()\fP
.IP "6." 4
\fBpm_nowiggle_bspline()\fP
.IP "7." 4
\fBpm_nowiggle_dst()\fP 
.PP

.SH "Function Documentation"
.PP 
.SS "double IR_Sigma2 (struct \fBCosmology\fP * Cx, double z, double kf0, long SPLIT)"

.PP
Compute the suppression factor IR_sigma2\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIz\fP Input: redshift 
.br
\fIkf0\fP Input: first element of the k-array, used in normalization of EH no-wiggle spectrum 
.br
\fISPLIT\fP Input: switch to set the method of wiggle-nowiggle split
.RE
.PP
\fBReturns\fP
.RS 4
value of IR resummation suppression factor 
.br
 
.RE
.PP

.SS "double IR_Sigma2_integrand (double x, void * par)"

.PP
Integrand to compute the suppression factor IR_sigma2\&. 
.PP
\fBParameters\fP
.RS 4
\fIx\fP Input: integration variable, k-values 
.br
\fIpar\fP Input: integration parameters
.RE
.PP
\fBReturns\fP
.RS 4
integrand to be used in IR_sigma2() function 
.br
 
.RE
.PP
BAO_scale = 110\&. Mpc/h\&.
.SS "double pm_IR_LO (struct \fBCosmology\fP * Cx, double k, double z, long SPLIT)"

.PP
Compute the leading-order IR-resummed matter power spectrum, ala Ivanovic et al\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIk\fP Input: wavenumber in unit of 1/Mpc\&. 
.br
\fIz\fP Input: redshift 
.br
\fISPLIT\fP Input: switch to set the method of wiggle-nowiggle split
.RE
.PP
\fBReturns\fP
.RS 4
value of leading IR-ressumed power spectrum 
.br
 
.RE
.PP

.SS "double pm_IR_NLO (struct \fBCosmology\fP * Cx, double k, double z, long SPLIT)"

.PP
Compute the next-to-leading-order IR-resummed matter power spectrum, ala Ivanovic et al\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIk\fP Input: wavenumber in unit of 1/Mpc\&. 
.br
\fIz\fP Input: redshift 
.br
\fISPLIT\fP Input: switch to set the method of wiggle-nowiggle split
.RE
.PP
\fBReturns\fP
.RS 4
value of NL IR-ressumed power spectrum 
.br
 
.RE
.PP

.SS "double pm_nowiggle (struct \fBCosmology\fP * Cx, double k, double z, double kf0, int cleanup, long SPLIT)"

.PP
Compute the no-wiggle componenet of the matter power spectrum\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIk\fP Input: wavenumber in unit of h/Mpc\&. 
.br
\fIz\fP Input: redshift 
.br
\fIkf0\fP Input: first element of the k-array, used in normalization of EH no-wiggle spectrum 
.br
\fIcleanup\fP Input: switch to set whether to free the memory allocated to no-wiggle interpolators 
.br
\fISPLIT\fP Input: switch to set the method of wiggle-nowiggle split
.RE
.PP
\fBReturns\fP
.RS 4
double value of no-wiggle power spectrum 
.br
 
.RE
.PP

.SS "double pm_nowiggle_bspline (struct \fBCosmology\fP * Cx, double k, double z, int cleanup)"

.PP
Compute the no-wiggle componenet of the matter power spectrum, reading in and interpolating the output of apython code which computed the broadband by fitting families of Bsplines (see Vlah et al 2015) 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIk\fP Input: wavenumber in unit of h/Mpc\&. 
.br
\fIz\fP Input: redshift 
.br
\fIcleanup\fP Input: switch to set whether to free the memory allocated to no-wiggle interpolators
.RE
.PP
\fBReturns\fP
.RS 4
double value of no-wiggle power spectrum 
.br
 
.RE
.PP

.SS "double pm_nowiggle_dst (struct \fBCosmology\fP * Cx, double k, double z, int cleanup)"

.PP
Compute the no-wiggle componenet of the matter power spectrum, reading in and interpolating the output of apython code which computed the broadband by discrete sin-transform, See Hamann et al 2010\&. 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIk\fP Input: wavenumber in unit of h/Mpc\&. 
.br
\fIz\fP Input: redshift 
.br
\fIcleanup\fP Input: switch to set whether to free the memory allocated to no-wiggle interpolators
.RE
.PP
\fBReturns\fP
.RS 4
double value of no-wiggle power spectrum 
.br
 
.RE
.PP

.SS "double pm_nowiggle_gfilter (struct \fBCosmology\fP * Cx, double k, double z, int cleanup)"

.PP
Compute the no-wiggle componenet of the matter power spectrum, using Gaussian filter (see Vlah et al 2015) 
.PP
\fBParameters\fP
.RS 4
\fICx\fP Input: pointer to cosmology structure 
.br
\fIk\fP Input: wavenumber in unit of h/Mpc\&. 
.br
\fIz\fP Input: redshift 
.br
\fIcleanup\fP Input: switch to set whether to free the memory allocated to no-wiggle interpolators
.RE
.PP
\fBReturns\fP
.RS 4
double value of no-wiggle power spectrum 
.br
 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for limHaloPT from the source code\&.
